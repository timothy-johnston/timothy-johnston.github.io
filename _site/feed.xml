<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tim Johnston</title>
    <description>My personal page.</description>
    <link>https://timothy-johnston.github.io//</link>
    <atom:link href="https://timothy-johnston.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 20 Jul 2018 01:12:27 -0400</pubDate>
    <lastBuildDate>Fri, 20 Jul 2018 01:12:27 -0400</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>How I Built a Cat-Detecting Twitter Bot</title>
        <description>&lt;p&gt;Recently, I built a cat-detecting, picture-taking, and tweet-tweeting Raspberry Pi / Twitter bot called &lt;a href=&quot;https://twitter.com/TheThirstyCat&quot;&gt;ThirstyCat&lt;/a&gt;. This is a Twitter bot that automatically takes a photo of my sweet cat Shasta and posts it to Twitter each time she takes a drink from her water bowl. I had been wanting to put together a project utilizing not only programming but also hardware/electronics for a while, and I also had been wanting to share pictures of my cat with random people on the Internet for a while. Thus, ThirstyCat was born. This post covers how I built this project - feel free to use this as a guide to build your own, or use it as inspiration to build something different!&lt;/p&gt;

&lt;h2 id=&quot;description&quot;&gt;Description&lt;/h2&gt;
&lt;p&gt;ThirstyCat uses a force-senstive resistor (FSR) and Raspberry Pi B+ to detect when Shasta approaches her water bowl. Since the FSR itsself is very small, I placed it underneath a larger platform (okay, a cheap cutting board) set in front of the water bowl. This way, any time the cat walks towards the bowl a force is applied to the FSR, even if its not being directly stepped on. A Pi Cam connected to the Pi is then triggered to take a picture.&lt;/p&gt;

&lt;p&gt;The system is controlled with a script written in Python, and it uses the Tweepy library to communicate with the Twitter API. Within the Python script is a force threshold value - whenever the platform is stepped on, the values coming back from the FSR increase and exceed the threshold. This triggers the Pi Cam to take a picture, and then that picture is automatically tweeted. Here’s an example Tweet!&lt;/p&gt;

&lt;div style=&quot;display:flex; justify-content:center;&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Alert, cat detected! Shasta just took a drink.&lt;br /&gt;Time:  2018-07-14 14:30:45.368819&lt;br /&gt;Number of drinks today:  2 &lt;a href=&quot;https://t.co/hwkccpVNuR&quot;&gt;pic.twitter.com/hwkccpVNuR&lt;/a&gt;&lt;/p&gt;&amp;mdash; ThirstyCat (@TheThirstyCat) &lt;a href=&quot;https://twitter.com/TheThirstyCat/status/1018201202738257920?ref_src=twsrc%5Etfw&quot;&gt;July 14, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;Before getting in to the details, I want to give a major shoutout to Andrew Caird. His guide on how to &lt;a href=&quot;https://acaird.github.io/computers/2015/01/07/raspberry-pi-fsr&quot;&gt;use a force sensitive resistor with a Raspberry Pi&lt;/a&gt; was tremendously helpful to me.&lt;/p&gt;

&lt;h2 id=&quot;materials&quot;&gt;Materials&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Raspberry Pi B+&lt;/li&gt;
  &lt;li&gt;Force-sensitive resistor&lt;/li&gt;
  &lt;li&gt;Breadboard&lt;/li&gt;
  &lt;li&gt;Pi Cobbler&lt;/li&gt;
  &lt;li&gt;MCP3008 analog to digital converter&lt;/li&gt;
  &lt;li&gt;Ribbon cable&lt;/li&gt;
  &lt;li&gt;10k Ohm resistor&lt;/li&gt;
  &lt;li&gt;Male/male jumper wires&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In terms of software, I used Python 2.7.3, Tweepy, and the Adafruit_MCP3008 library.&lt;/p&gt;

&lt;h2 id=&quot;lets-build-it&quot;&gt;Lets Build It&lt;/h2&gt;
&lt;p&gt;The process is pretty straight-forward. I’ll try to make it more straight-forward with lots of pictures.&lt;/p&gt;

&lt;p&gt;Plug the analog to digital converter and Pi Cobbler into the breadboard.
&lt;img src=&quot;/assets/build TC 1.JPG&quot; alt=&quot;Converter and Cobbler&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Refer to the wiring diagrams provided by Adafruit (&lt;a href=&quot;https://learn.adafruit.com/reading-a-analog-in-and-controlling-audio-volume-with-the-raspberry-pi/connecting-the-cobbler-to-a-mcp3008&quot;&gt;more info here)&lt;/a&gt;. Don’t worry that the cobbler and converter are in different locations than the picture of my own setup - what’s important here is to connect the MCP3008’s pins to the correct Cobbler pins according to the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;MCP3008 Pin -&amp;gt; Cobbler Pin&lt;/li&gt;
  &lt;li&gt;MCP3008 VDD -&amp;gt; 3.3V&lt;/li&gt;
  &lt;li&gt;MCP3008 VREF -&amp;gt; 3.3V&lt;/li&gt;
  &lt;li&gt;MCP3008 AGND -&amp;gt; GND&lt;/li&gt;
  &lt;li&gt;MCP3008 CLK -&amp;gt; #18&lt;/li&gt;
  &lt;li&gt;MCP3008 DOUT -&amp;gt; #23&lt;/li&gt;
  &lt;li&gt;MCP3008 DIN -&amp;gt; #24&lt;/li&gt;
  &lt;li&gt;MCP3008 CS -&amp;gt; #25&lt;/li&gt;
  &lt;li&gt;MCP3008 DGND -&amp;gt; GND&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/build TC 2.JPG&quot; alt=&quot;Connect pins&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here is the only tricky part. Connect the FSR and the 10k Ohm resistor to the breadboard. See the picture below:  The FSR goes in a free location on the breadboard. Use a jumper wire to connect one of the FSR leads to Channel 0 on the MCP3008. Then use the 10k Ohm resistor to connect that same location to the ground on the opposite side of the breadboard. Finally, use a jumper wire to connect the 2nd FSR lead to the power rail on the FSR’s side of the breadboard.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/build TC 6.JPG&quot; alt=&quot;Connect FSR&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Smooth sailing from here on out. Connect the breadboard to the Pi using the ribbon cable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/build TC 3.JPG&quot; alt=&quot;Connect FSR&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, connect the Pi Cam to the Pi. I didn’t take a picture of this part, but a quick Google search will give you lots of guides on that.&lt;/p&gt;

&lt;h2 id=&quot;lets-use-it&quot;&gt;Lets Use It&lt;/h2&gt;
&lt;p&gt;At this point, if you’ve been building your own, you’ve got a working force sensor. What you do with it now is up to you! Head to the &lt;a href=&quot;https://github.com/timothy-johnston/ThirstyCat/blob/master/scratchinCat.py&quot;&gt;project on GitHub&lt;/a&gt; to check out my source code to read in values from the FSR, implement logic based on those readings, and interface with Twitter. Feel free to fork, offer suggestions, and/or do your own thing with it.&lt;/p&gt;

&lt;p&gt;Thanks for reading!
&lt;img src=&quot;/assets/build TC 0.JPG&quot; alt=&quot;Me with cat&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 17 Jul 2018 20:45:42 -0400</pubDate>
        <link>https://timothy-johnston.github.io//jekyll/update/2018/07/17/how-i-built-a-cat-detecting-twitter-bot/</link>
        <guid isPermaLink="true">https://timothy-johnston.github.io//jekyll/update/2018/07/17/how-i-built-a-cat-detecting-twitter-bot/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Create A Personal Webpage/Blog, Part I: Use GitHub Pages to Make a Webpage</title>
        <description>&lt;p&gt;Thanks for checking out my blog – this is actually my very first post! This entry is a beginner’s guide to setting up a basic webpage using GitHub pages.&lt;/p&gt;

&lt;p&gt;GitHub pages is a service that allows you to host web pages directly out of a GitHub repository. User’s can create pages specifically for some project, or they can create a personal page to be used as a portfolio, blog, etc. In part II of this post, coming next weekend, we’ll utilize Jekyll with GitHub pages to create a lightweight and customizable blog.&lt;/p&gt;

&lt;p&gt;Lets build our webpage. We’ll begin by making a new GitHub repository (you’ll need an existing GitHub account – &lt;a href=&quot;https://github.com/join&quot;&gt;Join GitHub&lt;/a&gt;). Click the “+” symbol on the top right of your home page and select new repository. Since you’re making your personal page, name your repository &lt;yourUsername&gt;.github.io. Give it a short description if you’d like. I chose to initialize my repository with a README file – you don’t have to do this. When finished, click the green Create repository button.&lt;/yourUsername&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/makeNewRepository.png&quot; alt=&quot;Make new repository&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, clone your newly-created repository to your local machine. Click the green Clone or download button on the right side of the page, and then click the clipboard icon to the right of the URL in the dropdown.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/cloneRepository.png&quot; alt=&quot;Clone repository&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now the real fun begins! Lets head to the terminal. Enter the command git clone &amp;lt; the URL you just copied&amp;gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/enterCloneCommand.png&quot; alt=&quot;Enter clone command&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You’ll see some terminal output before you’re prompted to enter another command. Go ahead and cd itno the the directory that was created and enter the command git remote -v to confirm your remote repository was established as expected. You should see two lines of output that look something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/verifyRemote.png&quot; alt=&quot;Verify remote&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Your repository is all set up! Now, lets put some content on your page. Fire up a new file named index.html in your text editor of choice and add some HTML. You can start as simple as typing “Hello world!”, or you can follow my basic example using this HTML and CSS:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myPage.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello world!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Welcome to my page!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Enjoy this comic:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://imgs.xkcd.com/comics/cat_proximity.png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xkcd comic&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#4286f4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#f42929&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now that you’ve got some content put together, push it to GitHub. Enter the following commands:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- git add -A
- git commit -m “added index.html”
- git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Navigate to https://&amp;lt; yourUsername&amp;gt;.github.io. You’ll see that your changes are live. Congrats, you now have your own webpage! If you used the code snippets above, it will look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webpageExample.png&quot; alt=&quot;Example page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While the xkcd comic used in our example is funny (and scientifically accurate - I speak from experience), you’re ready to customize your page and add in some of your own awesome content. New to web development and nervous about HTML and CSS? There aren’t many better places to start than &lt;a href=&quot;https://www.freecodecamp.org/&quot;&gt;freeCodeCamp&lt;/a&gt;. Good luck, and, most importantly, have fun!&lt;/p&gt;

&lt;p&gt;Check back soon for Part II: Use Jekyll &amp;amp; GitHub Pages to Make a Blog&lt;/p&gt;

</description>
        <pubDate>Sun, 15 Jul 2018 15:45:42 -0400</pubDate>
        <link>https://timothy-johnston.github.io//jekyll/update/2018/07/15/create-a-personal-webpage-part-i/</link>
        <guid isPermaLink="true">https://timothy-johnston.github.io//jekyll/update/2018/07/15/create-a-personal-webpage-part-i/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>My Projects</title>
        <description>&lt;p&gt;This page is a work in progress.&lt;/p&gt;

&lt;p&gt;This will contain descriptions, screenshots, etc. of my projects. It currently just links to each project’s GitHub repository.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/timothy-johnston/ThirstyCat&quot;&gt;ThirstyCat Twitter Bot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/timothy-johnston/VirtualInterview&quot;&gt;VirtualInterview Command Line App&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Burrels Ford CodePen Page&lt;/p&gt;

&lt;p&gt;Vending Machine Command Line App&lt;/p&gt;

&lt;p&gt;National Park Reservation System Command Line App&lt;/p&gt;

</description>
        <pubDate>Fri, 15 Jun 2018 15:45:42 -0400</pubDate>
        <link>https://timothy-johnston.github.io//jekyll/update/2018/06/15/my-portfolio/</link>
        <guid isPermaLink="true">https://timothy-johnston.github.io//jekyll/update/2018/06/15/my-portfolio/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Carte Noire in Action</title>
        <description>&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; - This article is a derivative of &lt;a href=&quot;http://pixyll.com/jekyll/pixyll/2014/06/10/see-pixyll-in-action/&quot;&gt;“See pixyll in action”&lt;/a&gt;, taken from the lovely jekyll theme &lt;a href=&quot;http://pixyll.com/&quot;&gt;pixyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All links are easy to &lt;a href=&quot;#&quot;&gt;locate and discern&lt;/a&gt;, yet don’t detract from the harmony
of a paragraph. The &lt;em&gt;same&lt;/em&gt; goes for italics and &lt;strong&gt;bold&lt;/strong&gt; elements. Even the the strikeout
works if &lt;del&gt;for some reason you need to update your post&lt;/del&gt;. For consistency’s sake,
&lt;ins&gt;The same goes for insertions&lt;/ins&gt;, of course.&lt;/p&gt;

&lt;h3 id=&quot;code-with-syntax-highlighting&quot;&gt;Code, with syntax highlighting&lt;/h3&gt;

&lt;p&gt;Code blocks use the &lt;a href=&quot;https://noahfrederick.com/log/lion-terminal-theme-peppermint/&quot;&gt;peppermint&lt;/a&gt; theme.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Awesome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EvenMoreAwesome&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;validates_presence_of&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:something&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;validates&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;email_format: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Title&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;500px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;application/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;checked&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;title&#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Title&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- here goes the rest of the page --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;headings&quot;&gt;Headings!&lt;/h1&gt;

&lt;p&gt;They’re responsive, and well-proportioned (in &lt;code class=&quot;highlighter-rouge&quot;&gt;padding&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;line-height&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;margin&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;font-size&lt;/code&gt;).&lt;/p&gt;

&lt;h5 id=&quot;they-draw-the-perfect-amount-of-attention&quot;&gt;They draw the perfect amount of attention&lt;/h5&gt;

&lt;p&gt;This allows your content to have the proper informational and contextual hierarchy. Yay.&lt;/p&gt;

&lt;h3 id=&quot;there-are-lists-too&quot;&gt;There are lists, too&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Apples&lt;/li&gt;
  &lt;li&gt;Oranges&lt;/li&gt;
  &lt;li&gt;Potatoes&lt;/li&gt;
  &lt;li&gt;Milk&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Mow the lawn&lt;/li&gt;
  &lt;li&gt;Feed the dog&lt;/li&gt;
  &lt;li&gt;Dance&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;images-look-great-too&quot;&gt;Images look great, too&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/DMCHDqF.jpg&quot; alt=&quot;Thumper&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;stylish-blockquotes-included&quot;&gt;Stylish blockquotes included&lt;/h3&gt;

&lt;p&gt;You can use the markdown quote syntax, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; for simple quotes.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse quis porta mauris.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;latex-support&quot;&gt;LaTeX support&lt;/h3&gt;

&lt;p&gt;The default math delimiters are $$. Hence &lt;code class=&quot;highlighter-rouge&quot;&gt;$$ E = m \cdot c^2 $$&lt;/code&gt; yields &lt;script type=&quot;math/tex&quot;&gt;E = m \cdot c^2&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;And here’s something more fancy:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\zeta(s) = \frac{1}{\Gamma(s)} \int \limits_0^\infty x^{s-1} \sum_{n=1}^\infty e^{-nx} \mathrm{d}x = \frac{1}{\Gamma(s)} \int \limits_0^\infty \frac{x^{s-1}}{e^x - 1} \mathrm{d}x&lt;/script&gt;

&lt;h3 id=&quot;theres-more-being-added-all-the-time&quot;&gt;There’s more being added all the time&lt;/h3&gt;

&lt;p&gt;Checkout the &lt;a href=&quot;https://github.com/jacobtomlinson/carte-noire&quot;&gt;Github repository&lt;/a&gt; to request,
or add, features.&lt;/p&gt;

&lt;p&gt;Happy writing.&lt;/p&gt;

</description>
        <pubDate>Tue, 10 Jun 2014 08:31:19 -0400</pubDate>
        <link>https://timothy-johnston.github.io//jekyll/2014/06/10/carte-noire-in-action/</link>
        <guid isPermaLink="true">https://timothy-johnston.github.io//jekyll/2014/06/10/carte-noire-in-action/</guid>
        
        <category>demo</category>
        
        <category>action</category>
        
        <category>carte</category>
        
        <category>noire</category>
        
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
